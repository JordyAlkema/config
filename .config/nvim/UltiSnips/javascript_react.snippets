snippet base "React boilerplate" b
import React from 'react'

class ${1:ClassName} extends React.Component {
	render() {
		return (
			${0:<div>
			</div>}
		)
	}
}

export default $1
endsnippet

snippet rir "Import React"
import React from 'react'
endsnippet
snippet rid "Import react-dom"
import ReactDOM from 'react-dom'
endsnippet
snippet rip "Import prop-types"
import PropTypes from 'prop-types'
endsnippet
snippet ric "Import CSS"
import CSS from './CSS'
endsnippet

snippet rcwm "React componentWillMount"
componentWillMount() {
	$1
}
endsnippet
snippet rcdm "React componentDidMount"
componentDidMount() {
	$1
}
endsnippet
snippet rcwrp "React componentWillReceiveProps"
componentWillReceiveProps(nextProps) {
	$1
}
endsnippet
snippet rscu "React shouldComponentUpdate"
shouldComponentUpdate(nextProps, nextState) {
	$1
}
endsnippet
snippet rcwup "React componentWillUpdate"
componentWillUpdate(nextProps, nextState) {
	$1
}
endsnippet
snippet rcdu "React componentDidUpdate"
componentDidUpdate(prevProps, prevState) {
	$1
}
endsnippet
snippet rcwu "React componentWillUnmount"
componentWillUnmount() {
	$1
}
endsnippet

snippet rhc "React handleChange" bw
handleChange = (event) => {
	this.setState({${1:value}: event.target.value})
}
endsnippet
snippet rhs "React handleSubmit" bw
handleSubmit = (event) => {
	event.preventDefault()
}
endsnippet

snippet rcla "React class definition"
class ${1:ClassName} extends React.Component {
	render() {
		return (
			${0:<div>
			</div>}
		)
	}
}
endsnippet
snippet rpc "React pure component" w
const ${1:ComponentName} = (props) => {
	return (
		<div>$0
		</div>
	)
}
endsnippet
snippet rfunc "description" bw
const ${1: } = (props) => {
	return (
		<div>$0
		</div>
	)
}
endsnippet
snippet rcon "React default constructor"
constructor(props) {
	super(props)
	this.state = {
		$0
	}
}
endsnippet

snippet rdr "React render DOM"
ReactDOM.render(<${1:App} />, document.getElementById('root'))
endsnippet
snippet rss "React setState"
this.setState({
	$0
})
endsnippet

snippet ris "React import styled" bw
import styled from 'styled-components'
endsnippet
snippet styled "description" bw
const ${1: } = styled.${2: }\`
	${0:${VISUAL}}
\`
endsnippet

snippet Rbase "Redux base"
import { connect } from 'react-redux'

import ${1: } from '../components/$1'
import { ${2: } } from '../actions'

const mapStateToProps = (state, ownProps) => {
	return {

	}
}

const mapDispatchToProps = (dispatch, ownProps) => {
	return {
		=> {
			dispatch($2
		}
	}
}

export default connect(
	mapStateToProps,
	mapDispatchToProps,
)($1)
endsnippet
